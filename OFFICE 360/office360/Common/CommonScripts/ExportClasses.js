class Roles {
    static RoleID_ADMIN = 1;
    static RoleID_DEVELOPER = 2;
    static RoleID_MANAGER = 3;
    static RoleID_KPO = 4;
}
class Status {
    static Open = true;
    static Close = false;
}
class GeneralBranch_Session_Status {
    static ALLOWED = "ALLOWED";
    static NOT_ALLOWED = "NOT_ALLOWED";
    static NOT_ALLOWED = "NOT_ALLOWED";
}
class CSS_CLASS_Status {
    static DISABLED = "disabled";
    static ENABLE = "";
}
class FEE_CHARGING_METHOD {
    static RECURRING = "1";
    static ONE_TIME = "2";
}

class FILTER {
    static COA_ACCOUNTTYPE = {


        PROPERTY_PLANT_AND_EQUIPMENTS: 1,
        LONG_TERM_ASSETS: 2,
        ACCUMULATED_DEPRECIATION: 3,
        CURRENT_ASSETS: 4,
        OTHER_CURRENT_ASSETS: 5,
        LONG_TERM_LIABILITIES: 6,
        CURRENT_LIABILITIES: 7,
        OTHER_CURRENT_LIABILITIES: 8,
        EQUITY_DOES_NOT_CLOSE: 9,
        EQUITY_GETS_CLOSED: 10,
        EQUITY_RETAINED_EARNINGS: 11,
        SALES_REVENUES: 12,
        OTHER_INCOME: 13,
        COST_OF_SALES: 14,
        EXPENSES_DIRECT: 15,
        EXPENSES_ADMIN: 16,
        EXPENSES_MARKETING: 17,
        EXPENSES_FINANCIAL: 18,
        EXPENSES_OTHER_INDIRECT: 19,
        ACCOUNTS_RECEIVABLE: 20,
        BANK_AND_CASH: 21,
        ACCOUNTS_PAYABLE: 22,
        INVENTORY: 23,
    };
    static FEE_CATAGORY = {
        ACADEMIC_FEE: 1,
        OTHER_FEE: 2,
    }
    static FEE_CHARGING_METHOD = {
        RECURRING: 1,
        ONE_TIME: 2,
    }
}
class PARAMETER {
    static DB_IF_Condition = {

        ACCDISCOUNTTYPE_GETLIST:"ACCDISCOUNTTYPE_GETLIST",
        ACCFEESTRUCTURE_BY_GENERALBRANCH: "ACCFEESTRUCTURE_BY_GENERALBRANCH",
        ACCFEESTRUCTURE_BY_APPCLASS: "ACCFEESTRUCTURE_BY_APPCLASS",
        ACCFEESTRUCTURE_BY_APPCLASS_FOR_NEW_ADMISSION: "ACCFEESTRUCTURE_BY_APPCLASS_FOR_NEW_ADMISSION",
        ACCFEESTRUCTURE_GET_INFO_BY_GUID: "ACCFEESTRUCTURE_GET_INFO_BY_GUID",
        ACCFEESTRUCTURE_GET_INFO_NEW_STUDENT: "ACCFEESTRUCTURE_GET_INFO_NEW_STUDENT",
        ACCFEESTRUCTURE_GET_INFO_REGISTERED_STUDENT: "ACCFEESTRUCTURE_GET_INFO_REGISTERED_STUDENT",


        APPCLASS_BY_APPSESSION: "APPCLASS_BY_APPSESSION",
        APPCLASS_BY_GENERALBRANCH: "APPCLASS_BY_GENERALBRANCH",
        APPCLASS_FOR_ACCFEESTRUCTURE: "APPCLASS_FOR_ACCFEESTRUCTURE",

        APPSESSION_BY_GENERALBRANCH: "APPSESSION_BY_GENERALBRANCH",
        APPSESSION_FOR_NEW_ADMISSION: "APPSESSION_FOR_NEW_ADMISSION",
        APPSESSIONDETAIL_BY_APPSESSION: "APPSESSIONDETAIL_BY_APPSESSION",

        BRANCH_BY_USER_ALLOWEDBRANCHIDS: "BRANCH_BY_USER_ALLOWEDBRANCHIDS",
        BRANCH_BY_USER_ALLOWEDBRANCHIDS_CHECK_ACTIVE_APPSESSION: "BRANCH_BY_USER_ALLOWEDBRANCHIDS_CHECK_ACTIVE_APPSESSION",
        CHALLANMETHOD_LIST: "CHALLANMETHOD_LIST",
        CHALLANMETHOD_LIST_BY_ID: "CHALLANMETHOD_LIST_BY_ID",

        STRUCTURECOAACCOUNT_BY_GENERALCOMPANY: "STRUCTURECOAACCOUNT_BY_GENERALCOMPANY",

        STRUCTUREFEETYPE_BY_ACADEMICFEE: "STRUCTUREFEETYPE_BY_ACADEMICFEE",
        STRUCTUREFEETYPE_PRINTREPORT: "STRUCTUREFEETYPE_PRINTREPORT",
        STRUCTUREFEETYPE_BY_OTHERFEE: "STRUCTUREFEETYPE_BY_OTHERFEE",
        STRUCTUREFEETYPE_LIST: "STRUCTUREFEETYPE_LIST",
        STRUCTUREDISCOUNTTYPE_LIST: "STRUCTUREDISCOUNTTYPE_LIST",

        STUDYGROUP_BY_BRANCHSETTING: "STUDYGROUP_BY_BRANCHSETTING",
        STUDYGROUP_LIST: "STUDYGROUP_LIST",

        STUDYLEVEL_BY_BRANCHSETTING: "STUDYLEVEL_BY_BRANCHSETTING",
        STUDYLEVEL_LIST: "STUDYLEVEL_LIST",

        WHTAXPOLICY_BY_ACCFEESTRUCTURE: "WHTAXPOLICY_BY_ACCFEESTRUCTURE",
        WHTAXPOLICY_LIST: "WHTAXPOLICY_LIST",




    };

    static LookUpCondition = {
        GET_LK1_ADMISSIONCATAGORY: "GET_LK1_ADMISSIONCATAGORY",
        GET_LK1_BILLINGMETHOD: "GET_LK1_BILLINGMETHOD",
        GET_LK1_CAMPUSTYPE: "GET_LK1_CAMPUSTYPE",
        GET_LK1_CHALLANMETHOD_BYPARAMTER: "GET_LK1_CHALLANMETHOD_BYPARAMTER",
        GET_LK1_CHARGINGMETHOD: "GET_LK1_CHARGINGMETHOD",
        GET_LK1_CITY_BYPARAMETER: "GET_LK1_CITY_BYPARAMETER",
        GET_LK1_ENROLLMENTTYPES: "GET_LK1_ENROLLMENTTYPES",
        GET_LK1_FEECATAGORY: "GET_LK1_FEECATAGORY",
        GET_LK1_ORGANIZATIONTYPE: "GET_LK1_ORGANIZATIONTYPE",
        GET_LK1_POLICYPERIOD: "GET_LK1_POLICYPERIOD",
        GET_LK1_REGISTRATIONTYPE: "GET_LK1_REGISTRATIONTYPE",
        GET_LK1_ROLLCALLSYSTEM: "GET_LK1_ROLLCALLSYSTEM",
        GET_LK1_RELIGION: "GET_LK1_RELIGION",
        GET_LK1_SEARCHPARAMETER_BYPARAMTER: "GET_LK1_SEARCHPARAMETER_BYPARAMTER",
        GET_LK1_STUDYGROUP_BYPARAMTER: "GET_LK1_STUDYGROUP_BYPARAMTER",
        GET_LK1_STUDYLEVEL_BYPARAMTER: "GET_LK1_STUDYLEVEL_BYPARAMTER",
        GET_LK1_WHTAXPOLICY_BYPARAMTER: "GET_LK1_WHTAXPOLICY_BYPARAMTER",
        GET_LK1_COUNTRY: "GET_LK1_COUNTRY",
        GET_LK1_OCCUPATION: "GET_LK1_OCCUPATION",

    };

    static SESCondition = {
        GET_MT_ACCFEESTRUCTURE_BYPARAMETER: "GET_MT_ACCFEESTRUCTURE_BYPARAMETER",
        GET_MT_APPCLASS_BYPARAMETER: "GET_MT_APPCLASS_BYPARAMETER",
        GET_MT_APPCLASSREGISTRATION_BYPARAMETER: "GET_MT_APPCLASSREGISTRATION_BYPARAMETER",
        GET_MT_APPSESSION_BYPARAMETER: "GET_MT_APPSESSION_BYPARAMETER",
        GET_MT_APPSESSIONDETAIL_BYPARAMETER: "GET_MT_APPSESSIONDETAIL_BYPARAMETER",
        GET_MT_GENERALBRANCH_BYPARAMETER: "GET_MT_GENERALBRANCH_BYPARAMETER",
        GET_MT_STRUCTURECOAACCOUNT_BYPARAMETER: "GET_MT_STRUCTURECOAACCOUNT_BYPARAMETER",
        GET_MT_STRUCTUREFEETYPE_BYPARAMETER: "GET_MT_STRUCTUREFEETYPE_BYPARAMETER",
        GET_MT_STRUCTUREFEETYPE_DETAILBYID: "GET_MT_STRUCTUREFEETYPE_DETAILBYID",
        GET_MT_GENERALBRANCH_DETAILBYID: "GET_MT_GENERALBRANCH_DETAILBYID",
        GET_MT_ACCFEESTRUCTURE_DETAILBYID: "GET_MT_ACCFEESTRUCTURE_DETAILBYID",
        GET_MT_ACCFEESTRUCTUREDETAIL_DETAILBYID: "GET_MT_ACCFEESTRUCTUREDETAIL_DETAILBYID",
        GET_MT_GENERALCOMPANY_BYPARAMETER: "GET_MT_GENERALCOMPANY_BYPARAMETER",
        GET_MT_STRUCTUREDISCOUNTTYPE_BYPARAMETER: "GET_MT_STRUCTUREDISCOUNTTYPE_BYPARAMETER",
        GET_MT_STRUCTUREDISCOUNTTYPE_DETAILBYID: "GET_MT_STRUCTUREDISCOUNTTYPE_DETAILBYID",
        ISEXIST_MT_ACCDISCOUNTTYPE:"ISEXIST_MT_ACCDISCOUNTTYPE",
    };

    static DB_OperationType = {
        INSERT: "INSERT_DATA_INTO_DB",
        UPDATE: "UPDATE_DATA_INTO_DB",
        DELETE: "DELETE_DATA_INTO_DB",
    };

    static DocumentType = {
        BRANCHES: 1,
        CLASSES: 2,
        ADMISSION: 3,
        STUDENT: 4,
        CLASS_REGISTRATION: 5,
        FEE_STRUCTURE: 6,
        CHART_OF_ACCOUNT: 7,
        FEE_CHALLAN: 8,
        FEE_TYPE: 9,
    };

    static DocStatus = {
        Working_BRANCHES : 1,
        NonOperation_BRANCHES : 2,
        Working_CLASSES : 3,
        NonOperation_CLASSES : 4,
        Open_ADMISSION : 5,
        Closed_ADMISSION : 6,
        Cancelled_ADMISSION : 7,
        Active_STUDENT : 8,
        InActive_STUDENT : 9,
        NewEnrollment_CLASS_REGISTRATION : 10,
        Promoted_CLASS_REGISTRATION : 11,
        Demoted_CLASS_REGISTRATION : 12,
        Left_CLASS_REGISTRATION : 13,
        Active_FEE_STRUCTURE : 14,
        InActive_FEE_STRUCTURE : 15,
        UnPaid_FEE_CHALLAN : 16,
        Cancelled_FEE_CHALLAN : 17,
        Revised_FEE_CHALLAN : 18,
        Paid_FEE_CHALLAN : 19,
    }

    static CustomerCSSClass = {
        DISABLED: "disabled",
        ENABLE: "ENABLE",
        DynamicGroupBy: "DynamicGroupBy"
    };
}


class DynamicDTOperation {
    constructor(Id, Description) {
        this.Id = Id;
        this.Description = Description;
    }
}

class MaskingClass {
    static PhoneNumber = "PhoneNumber";
    static MobileNumber = "MobileNumber";
    static EmailAddress = "EmailAddress";
    static CNICNumber = "CNICNumber";
    static NTNNumber = "NTNNumber";
    static NumberOnly = "NumberOnly";
    static DatePickerSimple = "DatePickerSimple";
    static DatePickerMonthYear = "DatePickerMonthYear";
    static DatePickerYear = "DatePickerYear";
    static DatePickerRange = "DatePickerRange";
    static DatePickerTimer = "DatePickerTimer";

}
class ApplicableMasking {
    static PhoneNumber = "(999) 999-9999";
    static MobileNumber = "(999) 999-9999";
    static EmailAddress = "*{1,20}@*{1,20}.*{2,4}";
    static CNICNumber = "99999-9999999-9";
    static DatePickerSimple = "9999-99-99";
    static NTNNumber = "9999999-9";
}
